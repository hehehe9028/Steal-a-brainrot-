local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()

local player = game:GetService("Players").LocalPlayer
local shop = player.PlayerGui:FindFirstChild("Main") and player.PlayerGui.Main:FindFirstChild("CoinsShop")
local RunService = game:GetService("RunService")

local Window = Fluent:CreateWindow({
    Title = "HOKALAZA  |",
    SubTitle = "Steal a Brainrot",
    TabWidth = 130,
    Size = UDim2.fromOffset(490, 400),
    Acrylic = true,
    Theme = "Amethyst",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Home = Window:AddTab({ Title = "Home", Icon = "home" }),
    Main = Window:AddTab({ Title = "Main", Icon = "rocket" }),
    Server = Window:AddTab({ Title = "Server", Icon = "server" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" }),
}

-- === HOME TAB: Server link and features ===
Tabs.Home:AddParagraph({
    Title = "Discord Server",
    Content = "Join: https://discord.gg/4myWDtW8yj"
})
Tabs.Home:AddParagraph({
    Title = "Features",
    Content = [[
• Moon Gravity (low gravity jump)
• Teleport Up/Down (toggle)
• Speed Boost Slider
• Invisibility Cloak Support
• ESP (Players)
• Server Hop / Rejoin
• Keybinds (G: Teleport, F: Shop)
• Force Reset
• Hitbox ESP
• God Mode & Infinite Jump (activate God Mode first)
    ]]
})

-- === MAIN TAB: Your main features (example with ESP/Teleport/Moon Gravity) ===
local plotName
for _, plot in ipairs(workspace.Plots:GetChildren()) do
    if plot:FindFirstChild("YourBase", true).Enabled then
        plotName = plot.Name
        break
    end
end

local remainingTime = workspace.Plots[plotName].Purchases.PlotBlock.Main.BillboardGui.RemainingTime
local rtp = Tabs.Main:AddParagraph({ Title = "Lock Time: " .. remainingTime.Text })

task.spawn(function()
    while true do
        rtp:SetTitle("Lock Time: " .. remainingTime.Text)
        task.wait(0.25)
    end
end)

-- Moon Gravity logic
local moonGravityEnabled = false
local gravityConnection
Tabs.Main:AddButton({
    Title = "Moon Gravity",
    Description = "Toggle moon gravity (low gravity jump)",
    Callback = function()
        moonGravityEnabled = not moonGravityEnabled
        if moonGravityEnabled then
            local character = player.Character
            if character then
                local humanoid = character:FindFirstChildWhichIsA("Humanoid")
                local root = character:FindFirstChild("HumanoidRootPart")
                if humanoid and root then
                    humanoid.UseJumpPower = true
                    humanoid.JumpPower = 96
                    if gravityConnection then gravityConnection:Disconnect() end
                    gravityConnection = RunService.Stepped:Connect(function()
                        if not moonGravityEnabled then
                            gravityConnection:Disconnect()
                            gravityConnection = nil
                            humanoid.JumpPower = 50
                            root.Velocity = Vector3.new(root.Velocity.X, 0, root.Velocity.Z)
                            return
                        end
                        if root.Velocity.Y < 0 then
                            root.Velocity = Vector3.new(root.Velocity.X, root.Velocity.Y * 0.9, root.Velocity.Z)
                        end
                    end)
                end
            end
            Fluent:Notify({ Title = "HOKALAZA", Content = "Moon Gravity ON", Duration = 2 })
        else
            if gravityConnection then
                gravityConnection:Disconnect()
                gravityConnection = nil
            end
            local character = player.Character
            if character then
                local humanoid = character:FindFirstChildWhichIsA("Humanoid")
                local root = character:FindFirstChild("HumanoidRootPart")
                if humanoid and root then
                    humanoid.JumpPower = 50
                    root.Velocity = Vector3.new(root.Velocity.X, 0, root.Velocity.Z)
                end
            end
            Fluent:Notify({ Title = "HOKALAZA", Content = "Moon Gravity OFF", Duration = 2 })
        end
    end
})

-- Teleport Up/Down logic (toggle)
local teleportUp = true
Tabs.Main:AddButton({
    Title = "Teleport Up/Down",
    Description = "Click once to teleport up, again to teleport down.",
    Callback = function()
        local character = player.Character
        if character then
            local root = character:FindFirstChild("HumanoidRootPart")
            if root then
                if teleportUp then
                    root.CFrame = root.CFrame + Vector3.new(0,150,0)
                    Fluent:Notify({ Title = "HOKALAZA", Content = "Teleported Up", Duration = 2 })
                else
                    root.CFrame = root.CFrame - Vector3.new(0,189,0)
                    Fluent:Notify({ Title = "HOKALAZA", Content = "Teleported Down", Duration = 2 })
                end
                teleportUp = not teleportUp
            end
        end
    end
})

local SpeedSlider = Tabs.Main:AddSlider("Slider", {
    Title = "Speed Boost(1.5-1.7 working fine)",
    Default = 0,
    Min = 0,
    Max = 6,
    Rounding = 1,
})

Tabs.Main:AddParagraph({
    Title = "Use Speed Coil/Invisibility Cloak For Higher Speed",
})

local currentSpeed = 0
SpeedSlider:OnChanged(function(Value)
    currentSpeed = tonumber(Value) or 0
end)

local function sSpeed(character)
    local hum = character:WaitForChild("Humanoid")
    local hb = game:GetService("RunService").Heartbeat
    task.spawn(function()
        while character and hum and hum.Parent do
            if currentSpeed > 0 and hum.MoveDirection.Magnitude > 0 then
                character:TranslateBy(hum.MoveDirection * currentSpeed * hb:Wait() * 10)
            end
            task.wait()
        end
    end)
end

local function onCharacterAdded(character)
    sSpeed(character)
end

player.CharacterAdded:Connect(onCharacterAdded)
if player.Character then onCharacterAdded(player.Character) end

Tabs.Main:AddButton({
    Title = "Invisible",
    Description = "Use Invisibility Cloak",
    Callback = function()
        local character = player.Character or player.CharacterAdded:Wait()
        local cloak = character:FindFirstChild("Invisibility Cloak")
        if cloak and cloak:GetAttribute("SpeedModifier") == 2 then
            cloak.Parent = workspace
        else
            Fluent:Notify({ Title = "HOKALAZA", Content = "Use Invisibility Cloak First", Duration = 2 })
        end
    end
})

-- ESP
local Players = game:GetService("Players")
local espEnabled = false
local espInstances = {}

local function createESP(targetPlayer)
    if not espEnabled then return end
    if targetPlayer == Players.LocalPlayer then return end
    local character = targetPlayer.Character
    if not character then return end
    local root = character:FindFirstChild("HumanoidRootPart")
    if not root then return end
    if espInstances[targetPlayer] then
        espInstances[targetPlayer]:Destroy()
        espInstances[targetPlayer] = nil
    end
    local bb = Instance.new("BillboardGui")
    bb.Name = "HOKALAZA_ESP"
    bb.Adornee = root
    bb.Size = UDim2.new(0, 110, 0, 28)
    bb.AlwaysOnTop = true
    bb.Parent = root
    local lbl = Instance.new("TextLabel")
    lbl.Size = UDim2.new(1,0,1,0)
    lbl.BackgroundTransparency = 1
    lbl.Text = targetPlayer.DisplayName
    lbl.TextColor3 = Color3.fromRGB(255,255,0)
    lbl.TextStrokeTransparency = 0.5
    lbl.Font = Enum.Font.GothamBold
    lbl.TextScaled = true
    lbl.Parent = bb
    espInstances[targetPlayer] = bb
end

local function removeESP(targetPlayer)
    if espInstances[targetPlayer] then
        espInstances[targetPlayer]:Destroy()
        espInstances[targetPlayer] = nil
    end
end

local function setPlayerESP(enable)
    espEnabled = enable
    if enable then
        for _, p in ipairs(Players:GetPlayers()) do
            createESP(p)
        end
    else
        for _, bb in pairs(espInstances) do
            bb:Destroy()
        end
        espInstances = {}
    end
end

Players.PlayerAdded:Connect(function(p)
    if espEnabled then
        p.CharacterAdded:Connect(function()
            task.wait(0.5)
            createESP(p)
        end)
    end
end)
Players.PlayerRemoving:Connect(function(p)
    removeESP(p)
end)
for _,p in ipairs(Players:GetPlayers()) do
    p.CharacterAdded:Connect(function()
        if espEnabled then
            task.wait(0.5)
            createESP(p)
        end
    end)
end

Tabs.Main:AddButton({
    Title = "Toggle Players ESP",
    Description = "Shows ESP for all players",
    Callback = function()
        espEnabled = not espEnabled
        setPlayerESP(espEnabled)
        Fluent:Notify({ Title = "HOKALAZA", Content = "Players ESP: " .. (espEnabled and "ON" or "OFF"), Duration = 2 })
    end
})

-- === ADDED: Force Reset Feature ===
Tabs.Main:AddButton({
    Title = "Force Reset",
    Description = "Instantly resets your character.",
    Callback = function()
        local character = player.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.Health = 0
                Fluent:Notify({ Title = "HOKALAZA", Content = "Force Reset Triggered!", Duration = 2 })
            else
                Fluent:Notify({ Title = "HOKALAZA", Content = "Humanoid not found!", Duration = 2 })
            end
        end
    end
})

-- === ADDED: Hitbox ESP Feature ===
local hitboxEnabled = false
local hitboxInstances = {}

local function clearHitbox()
    for _, adorn in ipairs(hitboxInstances) do
        if adorn and adorn.Parent then
            adorn:Destroy()
        end
    end
    hitboxInstances = {}
end

local function applyHitboxToCharacter(character)
    for _, part in ipairs(character:GetChildren()) do
        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
            local box = Instance.new("BoxHandleAdornment")
            box.Adornee = part
            box.AlwaysOnTop = true
            box.ZIndex = 10
            box.Size = part.Size
            box.Transparency = 0.7
            box.Color3 = Color3.fromRGB(170, 0, 255)
            box.Parent = part
            table.insert(hitboxInstances, box)
        end
    end
end

local function refreshHitbox()
    clearHitbox()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character then
            applyHitboxToCharacter(plr.Character)
        end
    end
end

Tabs.Main:AddButton({
    Title = "Toggle Hitbox ESP",
    Description = "Highlights player hitboxes (except your own).",
    Callback = function()
        hitboxEnabled = not hitboxEnabled
        if hitboxEnabled then
            refreshHitbox()
            Fluent:Notify({ Title = "HOKALAZA", Content = "Hitbox ESP ON", Duration = 2 })
        else
            clearHitbox()
            Fluent:Notify({ Title = "HOKALAZA", Content = "Hitbox ESP OFF", Duration = 2 })
        end
    end
})

Players.PlayerAdded:Connect(function(plr)
    if hitboxEnabled then
        plr.CharacterAdded:Connect(function(char)
            task.wait(1)
            applyHitboxToCharacter(char)
        end)
    end
end)
for _, plr in ipairs(Players:GetPlayers()) do
    if hitboxEnabled then
        plr.CharacterAdded:Connect(function(char)
            task.wait(1)
            applyHitboxToCharacter(char)
        end)
    end
end

RunService.RenderStepped:Connect(function()
    if hitboxEnabled then
        refreshHitbox()
    end
end)

-- === GOD MODE ===
local godModeEnabled = false
local healthConnection
Tabs.Main:AddButton({
    Title = "God Mode",
    Description = "Makes you invincible. Activate before Infinite Jump.",
    Callback = function()
        godModeEnabled = not godModeEnabled
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if godModeEnabled then
            if humanoid then
                if healthConnection then healthConnection:Disconnect() end
                healthConnection = humanoid.HealthChanged:Connect(function()
                    if godModeEnabled then humanoid.Health = humanoid.MaxHealth end
                end)
                Fluent:Notify({ Title = "HOKALAZA", Content = "God Mode ON", Duration = 2 })
            else
                Fluent:Notify({ Title = "HOKALAZA", Content = "Humanoid not found!", Duration = 2 })
            end
        else
            if healthConnection then healthConnection:Disconnect() end
            Fluent:Notify({ Title = "HOKALAZA", Content = "God Mode OFF", Duration = 2 })
        end
    end
})

-- === INFINITE JUMP ===
local infJumpEnabled = false
local jumpConnection
Tabs.Main:AddButton({
    Title = "Infinite Jump",
    Description = "Jump infinitely. Activate God Mode first!",
    Callback = function()
        if not godModeEnabled then
            Fluent:Notify({ Title = "HOKALAZA", Content = "Please activate God Mode first!", Duration = 2 })
            return
        end
        infJumpEnabled = not infJumpEnabled
        if infJumpEnabled then
            if not jumpConnection then
                jumpConnection = game:GetService("UserInputService").JumpRequest:Connect(function()
                    if infJumpEnabled then
                        local character = player.Character or player.CharacterAdded:Wait()
                        local humanoid = character:FindFirstChildOfClass("Humanoid")
                        if humanoid then
                            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                        end
                    end
                end)
            end
            Fluent:Notify({ Title = "HOKALAZA", Content = "Infinite Jump ON", Duration = 2 })
        else
            if jumpConnection then
                jumpConnection:Disconnect()
                jumpConnection = nil
            end
            Fluent:Notify({ Title = "HOKALAZA", Content = "Infinite Jump OFF", Duration = 2 })
        end
    end
})

-- === SERVER TAB: Rejoin and Server Hop ===
Tabs.Server:AddButton({
    Title = "Rejoin",
    Description = "Rejoins the same server.",
    Callback = function()
        local ts = game:GetService("TeleportService")
        local p = game:GetService("Players").LocalPlayer
        ts:TeleportToPlaceInstance(game.PlaceId, game.JobId, p)
    end
})
Tabs.Server:AddButton({
    Title = "Server Hop",
    Description = "Joins a different server.",
    Callback = function()
        local PlaceID = game.PlaceId
        local HttpService = game:GetService("HttpService")
        local TeleportService = game:GetService("TeleportService")
        local AllIDs = {}
        local foundAnything = ""
        local actualHour = os.date("!*t").hour

        local function TPReturner()
            local Site
            if foundAnything == "" then
                Site = HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
            else
                Site = HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
            end
            local ID = ""
            if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
                foundAnything = Site.nextPageCursor
            end
            for _,v in pairs(Site.data) do
                if tonumber(v.maxPlayers) > tonumber(v.playing) then
                    ID = tostring(v.id)
                    TeleportService:TeleportToPlaceInstance(PlaceID, ID, player)
                    break
                end
            end
        end

        TPReturner()
    end
})

Tabs.Server:AddParagraph({
    Title = "Discord Server",
    Content = "Join the official server:\nhttps://discord.gg/4myWDtW8yj"
})

loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
SaveManager:SetLibrary(Fluent)
SaveManager:BuildConfigSection(Tabs.Settings)
SaveManager:LoadAutoloadConfig()
Window:SelectTab(1)
